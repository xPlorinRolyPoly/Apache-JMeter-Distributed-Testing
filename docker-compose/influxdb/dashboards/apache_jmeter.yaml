apiVersion: influxdata.com/v2alpha1
kind: Variable
metadata:
    name: epic-pascal-4ca001
spec:
    language: flux
    name: bucket
    query: |-
        buckets()
          |> filter(fn: (r) => r.name !~ /^_/)
          |> rename(columns: {name: "_value"})
          |> keep(columns: ["_value"])
    type: query
---
apiVersion: influxdata.com/v2alpha1
kind: Dashboard
metadata:
    name: crumbling-margulis-cca001
spec:
    charts:
      - axes:
          - base: "10"
            name: x
            scale: linear
          - label: ms
            name: y
            scale: linear
        colors:
          - hex: '#31C0F6'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 3
        kind: Xy
        name: OK requests count
        queries:
          - query: |-
                from(bucket: v.bucket)
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "jmeter")
                  |> filter(fn: (r) => r._field == "count")
                  |> filter(fn: (r) => r.statut == "ok")
                  |> aggregateWindow(every: 10s, fn: mean, createEmpty: true)
        width: 6
        xCol: _time
        yCol: _value
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            label: ms
            name: y
            scale: linear
        colors:
          - hex: '#31C0F6'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 3
        kind: Xy
        name: Max response time
        queries:
          - query: |-
                from(bucket: v.bucket)
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "jmeter")
                  |> filter(fn: (r) => r._field == "max")
                  |> aggregateWindow(every: 10s, fn: mean, createEmpty: true)
        width: 3
        yPos: 3
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            name: y
            scale: linear
        colors:
          - hex: '#31C0F6'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 3
        kind: Xy
        name: User count
        queries:
          - query: |-
                from(bucket: v.bucket)
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "jmeter")
                  |> filter(fn: (r) => r._field == "meanAT" or r._field == "maxAT" or r._field == "minAT")
                  |> aggregateWindow(every: 10s, fn: mean, createEmpty: true)
        width: 3
        xCol: _time
        yCol: _value
        yPos: 6
      - height: 2
        kind: Markdown
        name: Name this Cell
        note: "    \n    \n**This Dashboard gives you an overview of some JMeter metrics.
            Check out [documentation page for configuring JMeter](https://jmeter.apache.org/usermanual/realtime-results.html)
            if you don't see any data below.**"
        width: 12
        yPos: 9
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            label: ms
            name: y
            scale: linear
        colors:
          - hex: '#31C0F6'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 3
        kind: Xy
        name: Min response time
        queries:
          - query: |-
                from(bucket: v.bucket)
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "jmeter")
                  |> filter(fn: (r) => r._field == "min")
                  |> aggregateWindow(every: 10s, fn: mean, createEmpty: true)
        width: 3
        xPos: 3
        yPos: 3
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            name: y
            scale: linear
        colors:
          - hex: '#31C0F6'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 3
        kind: Xy
        name: Number of hits
        queries:
          - query: |-
                from(bucket: v.bucket)
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "jmeter")
                  |> filter(fn: (r) => r._field == "hit")
                  |> aggregateWindow(every: 10s, fn: mean, createEmpty: true)
        width: 3
        xPos: 3
        yPos: 6
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            label: ms
            name: y
            scale: linear
        colors:
          - hex: '#31C0F6'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 3
        kind: Xy
        name: Avg response time
        queries:
          - query: |-
                from(bucket: v.bucket)
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "jmeter")
                  |> filter(fn: (r) => r._field == "avg")
                  |> aggregateWindow(every: 10s, fn: mean, createEmpty: true)
        width: 6
        xCol: _time
        xPos: 6
        yCol: _value
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            label: ms
            name: y
            scale: linear
        colors:
          - hex: '#31C0F6'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 3
        kind: Xy
        name: 99 and 95 percentile for successful request
        queries:
          - query: |-
                from(bucket: v.bucket)
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "jmeter")
                  |> filter(fn: (r) => r._field == "pct95.0" or r._field == "pct99.0")
                  |> filter(fn: (r) => r.statut == "ok")
                  |> aggregateWindow(every: 10s, fn: mean, createEmpty: true)
        width: 3
        xCol: _time
        xPos: 6
        yCol: _value
        yPos: 3
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "2"
            name: y
            scale: linear
        colors:
          - hex: '#31C0F6'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 3
        kind: Xy
        name: Sent bytes
        queries:
          - query: |-
                from(bucket: v.bucket)
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "jmeter")
                  |> filter(fn: (r) => r._field == "sb")
                  |> aggregateWindow(every: 10s, fn: mean, createEmpty: true)
        width: 3
        xPos: 6
        yPos: 6
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            name: y
            scale: linear
        colors:
          - hex: '#FD7A5D'
            name: Delorean
            type: scale
          - hex: '#5F1CF2'
            name: Delorean
            type: scale
          - hex: '#4CE09A'
            name: Delorean
            type: scale
        geom: line
        height: 3
        kind: Xy
        name: KO requests count
        note: dfsdfsdf
        queries:
          - query: |-
                from(bucket: v.bucket)
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "jmeter")
                  |> filter(fn: (r) => r._field == "count")
                  |> filter(fn: (r) => r.statut == "ko")
                  |> aggregateWindow(every: 10s, fn: mean, createEmpty: true)
        width: 3
        xCol: _time
        xPos: 9
        yCol: _value
        yPos: 3
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "2"
            name: y
            scale: linear
        colors:
          - hex: '#31C0F6'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 3
        kind: Xy
        name: Received bytes
        queries:
          - query: |-
                from(bucket: v.bucket)
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "jmeter")
                  |> filter(fn: (r) => r._field == "rb")
                  |> aggregateWindow(every: 10s, fn: mean, createEmpty: true)
        width: 3
        xPos: 9
        yPos: 6
    description: A collection of useful visualizations for monitoring your JMeter
        using backend listener
    name: JMeter
